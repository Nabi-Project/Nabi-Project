apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nabi.fullname" . }}
  labels:
    {{- include "nabi.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "nabi.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nabi.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nabi.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          args:
          - tunnel
          # Points cloudflared to the config file, which configures what
          # cloudflared will actually do. This file is created by a ConfigMap
          - --config
          - /etc/cloudflared/config/config.yaml
          - run
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              # Cloudflared has a /ready endpoint which returns 200 if and only if
              # it has an active connection to the edge.
              path: /ready
              port: 2000
              failureThreshold: 1
              initialDelaySeconds: 10
              periodSeconds: 10
          volumeMounts:
          - name: {{ include "nabi.fullname" . }}-config
            mountPath: /etc/cloudflared/config
            readOnly: true
          - name: {{ include "nabi.fullname" . }}-creds
            mountPath: /etc/cloudflared/creds
            readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: {{ include "nabi.fullname" . }}-creds
        secret:
          secretName: {{ .Values.tunnel.secretName }}
      - name: {{ include "nabi.fullname" . }}-config
        configMap:
          name: {{ include "nabi.fullname" . }}
          items:
          - key: config.yaml
            path: config.yaml
